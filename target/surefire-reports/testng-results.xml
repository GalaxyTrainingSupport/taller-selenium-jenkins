<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-09-14T23:33:26 PET" name="Ecommerce Suite" finished-at="2020-09-14T23:35:04 PET" duration-ms="97563">
    <groups>
    </groups>
    <test started-at="2020-09-14T23:33:26 PET" name="Regression Test" finished-at="2020-09-14T23:34:28 PET" duration-ms="61299">
      <class name="pe.edu.galaxy.Annotations">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:pe.edu.galaxy.Annotations@3d36e4cd]" started-at="2020-09-14T23:33:26 PET" name="beforeTest" finished-at="2020-09-14T23:33:26 PET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:pe.edu.galaxy.Annotations@3d36e4cd]" started-at="2020-09-14T23:33:26 PET" name="beforeClass" finished-at="2020-09-14T23:33:26 PET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:pe.edu.galaxy.Annotations@3d36e4cd]" started-at="2020-09-14T23:33:26 PET" name="beforeMethod" finished-at="2020-09-14T23:33:26 PET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test()[pri:1, instance:pe.edu.galaxy.Annotations@3d36e4cd]" started-at="2020-09-14T23:33:26 PET" name="test" finished-at="2020-09-14T23:33:26 PET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:pe.edu.galaxy.Annotations@3d36e4cd]" started-at="2020-09-14T23:33:26 PET" name="afterMethod" finished-at="2020-09-14T23:33:26 PET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:pe.edu.galaxy.Annotations@3d36e4cd]" started-at="2020-09-14T23:33:26 PET" name="beforeMethod" finished-at="2020-09-14T23:33:26 PET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:2, instance:pe.edu.galaxy.Annotations@3d36e4cd]" started-at="2020-09-14T23:33:26 PET" name="test2" finished-at="2020-09-14T23:33:26 PET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:pe.edu.galaxy.Annotations@3d36e4cd]" started-at="2020-09-14T23:33:26 PET" name="afterMethod" finished-at="2020-09-14T23:33:26 PET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:pe.edu.galaxy.Annotations@3d36e4cd]" started-at="2020-09-14T23:33:26 PET" name="afterClass" finished-at="2020-09-14T23:33:26 PET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:pe.edu.galaxy.Annotations@3d36e4cd]" started-at="2020-09-14T23:34:28 PET" name="afterTest" finished-at="2020-09-14T23:34:28 PET" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- pe.edu.galaxy.Annotations -->
      <class name="pe.edu.galaxy.Shopping">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:pe.edu.galaxy.Shopping@6a472554]" started-at="2020-09-14T23:33:26 PET" name="beforeClass" finished-at="2020-09-14T23:33:42 PET" duration-ms="15756" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="getLisProducts()[pri:1, instance:pe.edu.galaxy.Shopping@6a472554]" started-at="2020-09-14T23:33:42 PET" name="getLisProducts" finished-at="2020-09-14T23:33:42 PET" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLisProducts -->
        <test-method signature="addFirstItem()[pri:2, instance:pe.edu.galaxy.Shopping@6a472554]" started-at="2020-09-14T23:33:42 PET" name="addFirstItem" finished-at="2020-09-14T23:33:54 PET" duration-ms="11222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFirstItem -->
        <test-method signature="addMoreItem()[pri:3, instance:pe.edu.galaxy.Shopping@6a472554]" started-at="2020-09-14T23:33:54 PET" name="addMoreItem" finished-at="2020-09-14T23:34:11 PET" duration-ms="17566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMoreItem -->
        <test-method signature="shippingAddress()[pri:4, instance:pe.edu.galaxy.Shopping@6a472554]" started-at="2020-09-14T23:34:11 PET" name="shippingAddress" finished-at="2020-09-14T23:34:18 PET" duration-ms="7254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shippingAddress -->
        <test-method signature="completeOrder()[pri:5, instance:pe.edu.galaxy.Shopping@6a472554]" started-at="2020-09-14T23:34:18 PET" name="completeOrder" finished-at="2020-09-14T23:34:22 PET" duration-ms="4031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeOrder -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:pe.edu.galaxy.Shopping@6a472554]" started-at="2020-09-14T23:34:22 PET" name="afterClass" finished-at="2020-09-14T23:34:28 PET" duration-ms="5263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- pe.edu.galaxy.Shopping -->
    </test> <!-- Regression Test -->
    <test started-at="2020-09-14T23:34:28 PET" name="Integration Test" finished-at="2020-09-14T23:35:04 PET" duration-ms="35709">
      <class name="pe.edu.galaxy.Annotations">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:pe.edu.galaxy.Annotations@41ee392b]" started-at="2020-09-14T23:33:26 PET" name="beforeSuite" finished-at="2020-09-14T23:33:26 PET" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:pe.edu.galaxy.Annotations@41ee392b]" started-at="2020-09-14T23:34:28 PET" name="beforeTest" finished-at="2020-09-14T23:34:28 PET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:pe.edu.galaxy.Annotations@41ee392b]" started-at="2020-09-14T23:35:04 PET" name="beforeClass" finished-at="2020-09-14T23:35:04 PET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="test()[pri:1, instance:pe.edu.galaxy.Annotations@41ee392b]" started-at="2020-09-14T23:35:04 PET" name="test" finished-at="2020-09-14T23:35:04 PET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:pe.edu.galaxy.Annotations@41ee392b]" started-at="2020-09-14T23:35:04 PET" name="beforeMethod" finished-at="2020-09-14T23:35:04 PET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:pe.edu.galaxy.Annotations@41ee392b]" started-at="2020-09-14T23:35:04 PET" name="afterMethod" finished-at="2020-09-14T23:35:04 PET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test2()[pri:2, instance:pe.edu.galaxy.Annotations@41ee392b]" started-at="2020-09-14T23:35:04 PET" name="test2" finished-at="2020-09-14T23:35:04 PET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:pe.edu.galaxy.Annotations@41ee392b]" started-at="2020-09-14T23:35:04 PET" name="beforeMethod" finished-at="2020-09-14T23:35:04 PET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:pe.edu.galaxy.Annotations@41ee392b]" started-at="2020-09-14T23:35:04 PET" name="afterMethod" finished-at="2020-09-14T23:35:04 PET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:pe.edu.galaxy.Annotations@41ee392b]" started-at="2020-09-14T23:35:04 PET" name="afterClass" finished-at="2020-09-14T23:35:04 PET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:pe.edu.galaxy.Annotations@41ee392b]" started-at="2020-09-14T23:35:04 PET" name="afterTest" finished-at="2020-09-14T23:35:04 PET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:pe.edu.galaxy.Annotations@41ee392b]" started-at="2020-09-14T23:35:04 PET" name="afterSuite" finished-at="2020-09-14T23:35:04 PET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- pe.edu.galaxy.Annotations -->
      <class name="pe.edu.galaxy.Invoice">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:pe.edu.galaxy.Invoice@1e67a849]" started-at="2020-09-14T23:34:28 PET" name="beforeClass" finished-at="2020-09-14T23:34:43 PET" duration-ms="14789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="goToSingIn()[pri:1, instance:pe.edu.galaxy.Invoice@1e67a849]" started-at="2020-09-14T23:34:43 PET" name="goToSingIn" finished-at="2020-09-14T23:34:49 PET" duration-ms="6404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToSingIn -->
        <test-method signature="setCredential()[pri:2, instance:pe.edu.galaxy.Invoice@1e67a849]" started-at="2020-09-14T23:34:50 PET" name="setCredential" finished-at="2020-09-14T23:34:53 PET" duration-ms="3328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setCredential -->
        <test-method signature="salePekosita()[pri:3, instance:pe.edu.galaxy.Invoice@1e67a849]" started-at="2020-09-14T23:34:53 PET" name="salePekosita" finished-at="2020-09-14T23:34:58 PET" duration-ms="5216" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<SUNAT: El dato ingresado como unidad de medida no corresponde al valor esperado - Detalle: xxx.xxx.xxx value='ticket: 1600110682097 error: : 2936: Valor no se encuentra en el catalogo: 03 (nodo: "cbc:InvoicedQuantity/unitCode" valor: "UND")'> but was:<SUNAT: El dato ingresado como unidad de medida no corresponde al valor esperado - Detalle: xxx.xxx.xxx value='ticket: 1600144105981 error: : 2936: Valor no se encuentra en el catalogo: 03 (nodo: "cbc:InvoicedQuantity/unitCode" valor: "UND")'>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<SUNAT: El dato ingresado como unidad de medida no corresponde al valor esperado - Detalle: xxx.xxx.xxx value='ticket: 1600110682097 error: : 2936: Valor no se encuentra en el catalogo: 03 (nodo: "cbc:InvoicedQuantity/unitCode" valor: "UND")'> but was:<SUNAT: El dato ingresado como unidad de medida no corresponde al valor esperado - Detalle: xxx.xxx.xxx value='ticket: 1600144105981 error: : 2936: Valor no se encuentra en el catalogo: 03 (nodo: "cbc:InvoicedQuantity/unitCode" valor: "UND")'>
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:82)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:87)
at pe.edu.galaxy.Invoice.salePekosita(Invoice.java:86)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- salePekosita -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:pe.edu.galaxy.Invoice@1e67a849]" started-at="2020-09-14T23:34:58 PET" name="afterClass" finished-at="2020-09-14T23:35:04 PET" duration-ms="5928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- pe.edu.galaxy.Invoice -->
    </test> <!-- Integration Test -->
  </suite> <!-- Ecommerce Suite -->
</testng-results>
